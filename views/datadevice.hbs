
<!-- SCRIPTS NECESARIOS -->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<div class="container-fluid m-0 p-0 h-auto" style="overflow-x: hidden;">
    <div class="row mt-3 mx-0 mx-md-3">
        <div class="col-12 rounded py-auto shadow-sm bg-body">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb my-3">
                    <li class="breadcrumb-item"><a href="#">INICIO</a></li>
                    <li class="breadcrumb-item"><a href="#">MAQUINAS</a></li>
                    <li class="breadcrumb-item active" aria-current="page">DISPOSITIVOS</li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="row gx-2 m-3" id="sensors_cards">

    </div>
</div>






<script>
    axios({ 
        
        method: 'POST',   
        url: '{{url}}/api/find_OneDevice', 
        headers: {

            Authorization: "Bearer Token"

        }, 
        data: { 

            id_machine: "{{id_machine}}",
            id_device: "{{id_device}}"
        }
    
    }).then((res) => {

        var resultados = res.data;
        let chart_apex;
        if(resultados.status) {
            
            for(let device = 0 ; device < resultados.data[0].dispositivos.length ; device++){
                
                if(resultados.data[0].dispositivos[device].id_device == "{{id_device}}") {
                    
                    console.log(resultados.data[0]._id);
                    
                    let rele_socket;
                    let sensors_cards = "";
                    let reles_cards = `
                      <div class="col-12 shadow rounded" style="background-color: #fff;">
                          <table class="table table-hover p-5 text-center">
                              <thead>
                                  <tr>
                                      <th scope="col">Nombre</th>
                                      <th scope="col">Descripción</th>
                                      <th scope="col">Estado</th>
                                      <th scope="col">Controles</th>
                                  </tr>
                              </thead>
                              <tbody>
                    `;
                    
                    for(let s = 0 ; s < resultados.data[0].dispositivos[device].sensores.length ; s++){
                        
                        if(resultados.data[0].dispositivos[device].sensores[s].type == "AI"){
                            
                            sensors_cards += `
                                <div class="col-12 shadow rounded mb-3" style="background-color: #fff;">
                                  <div id="chart_${s}" class="my-3"></div>
                                </div>
                            `;

                            chart_apex = new Function(`

                                let data = [];
                    
                                let options = {
                                    chart: {
                                        height: 350,
                                        type: 'area',
                                        animations: {
                                            enabled: true,
                                            easing: 'linear',
                                            dynamicAnimation: {
                                                speed: 500
                                            }
                                        },
                                        toolbar: {
                                            show: false
                                        },
                                        zoom: {
                                            enabled: false
                                        }
                                    },
                                    tooltip: {
                                        
                                    },
                                    dataLabels: {
                                        enabled: true
                                    },
                                    stroke: {
                                        curve: 'straight'
                                    },
                                    series: [{
                                        data: data
                                    }],
                                    title: {
                                        text: 'sensor de ${resultados.data[0].dispositivos[device].sensores[s].variable}',
                                        align: 'left'
                                    },
                                    markers: {
                                        size: 0
                                    },
                                    xaxis: {
                                        labels: {
                                            format: 'HH:mm:ss'
                                        }
                                        
                                    },
                                    yaxis: {
                                        max: 100,
                                        min: 0
                                    },
                                    legend: {
                                        show: true
                                    },
                                    colors: ['#FF4D0E'],
                                };

                                let chart = new ApexCharts(
                                    document.querySelector("#chart_${s}"),
                                    options
                                );

                                chart.render();

                                Date.prototype.addHours= function(h){
                                  this.setHours(this.getHours()+h);
                                  return this;
                                }

                                socket.on("${res.data.data[0].dispositivos[device].sensores[s].name}", sensores => {
                                    
                                    
                                    if(data.length > 10) {
                                        data.shift();
                                    }
                                    data.push({x: sensores.created_at_origin, y: sensores.${res.data.data[0].dispositivos[device].sensores[s].id_variable}});
                                  
                                    chart.updateSeries([{
                                            data: data
                                    }])
                                });      
                            `);
                        }
                        else if(res.data.data[0].dispositivos[device].sensores[s].type == "DO"){
                            reles_cards += `
                                <tr>
                                    <th scope="row">${res.data.data[0].dispositivos[device].sensores[s].name}</th>
                                    <td>${res.data.data[0].dispositivos[device].sensores[s].descripcion}</td>
                                    <td id="${res.data.data[0].dispositivos[device].sensores[s].variable}"> -- </td>
                                    <td>
                                        <button class="btn btn-success" onclick="send_command('${res.data.data[0].dispositivos[device].name}', 'rel1')">ON</button>
                                        <button class="btn btn-danger" onclick="send_command('${res.data.data[0].dispositivos[device].name}', 'rel0')">OFF</button>
                                    </td>
                                </tr>
                            `;
                          
                            rele_socket = new Function(`
                                socket.on("${res.data.data[0].dispositivos[device].name}", sensores => {
                                    
                                    if(sensores.${res.data.data[0].dispositivos[device].sensores[s].variable} == 0) {
                                        document.getElementById('${res.data.data[0].dispositivos[device].sensores[s].variable}').innerHTML = "<span class='badge rounded-pill bg-danger'>Desactivado</span>";
                                    }
                                    else if(sensores.${res.data.data[0].dispositivos[device].sensores[s].variable} == 1){
                                        document.getElementById('${res.data.data[0].dispositivos[device].sensores[s].variable}').innerHTML = "<span class='badge rounded-pill bg-success'>Activado</span>";
                                    }
                                });      
                            `);

                            
                        }
                        else if(res.data.data[0].dispositivos[device].sensores[s].type == "DI"){
                            sensors_cards += `<div class="col-12"> ENTRADA DIGITAL </div>`;
                        }




                        
                    }

                   
                    reles_cards += `
                                    <tr>
                                        <th scope="row">Señal Wi-fi</th>
                                        <td> -- </td>
                                        <td id="k">
                                            <span class='badge rounded-pill text-dark bg-warning'>Regular</span>
                                        </td>
                                        <td> -78 dbm  [VALOR ESTATICO]</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Estado Bateria</th>
                                        <td> -- </td>
                                        <td id="k">
                                            <span class='badge rounded-pill bg-danger'>Descargandose</span>
                                        </td>
                                        <td> 73%  [VALOR ESTATICO]</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    `;
                    document.getElementById('sensors_cards').innerHTML = sensors_cards+reles_cards;
                    chart_apex();
                    rele_socket();
                     
                }
            }
        }
        else {
            console.log(res.data.msg);
        }      
    }).catch((err) => {   
        console.log(err);
    });


    function send_command(device, command){
        console.log(device, command);
        axios(
            { 
                method: 'POST', 
                url: '{{url}}/api/send_command', 
                headers: {
                    Authorization: "Bearer Token"
                }, 
                data: { 
                    commandMessage: command,
                    deviceId: device 
                }
            }
        ).then((res) => {
        
            console.log(res.data);

        }).catch((err) => {
            
            console.log(err);

        });

    }
 
      
    
</script>