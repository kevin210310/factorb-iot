<!-- SCRIPTS NECESARIOS -->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="/libs/a/jquery-3.5.1.js"></script>
<script src="/libs/a/jquery.dataTables.min.js"></script>
<script src="/libs/a/dataTables.bootstrap5.min.js"></script>
<script src="/libs/a/dataTables.select.min.js"></script>
<div class="container-fluid m-0 p-0 h-auto" style="overflow-x: hidden;">
    <div class="row mt-3 mx-0 mx-md-3 shadow-sm bg-body">
        <!-- BREADCRUMB -->
        <div class="col-6 rounded py-auto">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb my-3">
                    <li class="breadcrumb-item"><a href="#">INICIO</a></li>
                    <li class="breadcrumb-item"><a href="#">MAQUINAS</a></li>
                    <li class="breadcrumb-item active" aria-current="page">DISPOSITIVOS</li>
                </ol>
            </nav>
        </div>
        <!-- BOTON ALARMAS -->
        <div class="col-6 rounded py-auto" style="display:flex;justify-content: flex-end;">
            <div class="col-1 float-right d-grid gap-2 my-auto">
                <button class="btn btn-warning my-auto float-end" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">   
                    <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
                        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
                    </svg>
                </button>

                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
                    <div class="offcanvas-header">
                        <h5 id="offcanvasRightLabel">CONFIGURACIONES</h5>
                        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        ...
                    </div>
                </div>
            </div>
        </div>
    </div>
    

      
    <div class="row g-3 m-2" id="tarjeta_sensores">
    </div>
</div>

<script>
    axios({ 
        
        method: 'POST',   
        url: '{{url}}/api/find_OneDevice', 
        headers: {

            Authorization: "Bearer Token"

        }, 
        data: { 

            id_machine: "{{id_machine}}",
            id_device: "{{id_device}}"
        }
    
    }).then((res) => {
        

        let resultados = res.data;
        let variableAnaloga = ``;
        let variableDigital = `
            <div class="col-6">
                <div class="p-3 border" style="background-color: #fff;height: 350px;">
                    <div>
                        <table class="table table-hover text-center" id="data_device">
                                <thead>
                                    <tr>
                                        <th scope="col">Nombre</th>
                                        <th scope="col">Descripción</th>
                                        <th scope="col">Estado</th>
                                        <th scope="col">Controles</th>
                                    </tr>
                                </thead>
                                <tbody>
        `;
        let bateria = `
            <div class="col-3">
                <div class="p-3 border" style="background-color: #fff;height: 350px;">
                    <div id="battery_gauge"></div>
                </div>
            </div>
        `;
        let wifi = `
            <div class="col-3">
                <div class="p-3 border" style="background-color: #fff;height: 350px;">
                    <div id="wifi_gauge"></div>
                </div>
            </div>
        `;
        let chart_apex;

        if(resultados.status) {

            let dispositivos = resultados.data[0].dispositivos;
            let functionRealTime;
            let socket = ``;
            
            for(let d = 0 ; d < dispositivos.length ; d++) {
                
                if(dispositivos[d].id_device == "{{id_device}}") {
                    console.log(dispositivos[d].name);
                    socket += `socket.on("${dispositivos[d].name}", sensores => {`;
                    let sensores = dispositivos[d].sensores;
                    console.log(sensores.length, "sensores recuperados");

                    for(let s = 0 ; s < sensores.length ; s++) {
                        
                        if(sensores[s].type == "DO") {

                            variableDigital += `
                                <tr>
                                    <th>${sensores[s].name}</th>
                                    <td>${sensores[s].descripcion}</td>
                                    <td id="DO${sensores[s]._id}">
                                        <span class='badge rounded-pill bg-light'>no data</span>
                                    </td>
                                    <td>
                                        <button class="btn btn-success" onclick="send_command('${dispositivos[d].name}', 'rel1')">ON</button>
                                        <button class="btn btn-danger" onclick="send_command('${dispositivos[d].name}', 'rel0')">OFF</button>
                                    </td>
                                </tr>
                            `;

                            socket += `
                                
                                if(sensores.${sensores[s].variable} == 1) {
                                    document.getElementById('DO${sensores[s]._id}').innerHTML = "<span class='badge rounded-pill bg-success'>activado</span>";
                                } else if(sensores.${sensores[s].variable} == 0) {
                                    document.getElementById('DO${sensores[s]._id}').innerHTML = "<span class='badge rounded-pill bg-danger'>desactivado</span>";
                                }`;


                        } 
                        else if(sensores[s].type == "AI") {
                            
                            variableAnaloga += `
                                <div class="col-9">
                                    <div class="p-3 border" style="background-color: #fff;">
                                        <div id="realtime${sensores[s]._id}"></div>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div div class="p-3 border d-flex flex-column justify-content-center align-items-center" style="height: 300px;background-color: #fff;">
                                        <div id="gauge${sensores[s]._id}"></div>
                                        <p class="mt-3">Ultima actualización: 07-06-2021 16:28:32</p>
                                    </div>
                                </div>
                            `;

                            socket += `
                                if(data${sensores[s]._id}.length > 30) {
                                    data${sensores[s]._id}.shift();
                                }
                                data${sensores[s]._id}.push({x: sensores.created_at_origin, y: sensores.${sensores[s].id_variable}});
                                  
                                chart${sensores[s]._id}.updateSeries([{
                                        data: data${sensores[s]._id}
                                }])

                                chartgauge${sensores[s]._id}.updateSeries([sensores.${sensores[s].id_variable}])
                            
                            
                            `;

                            functionRealTime += `

                                let data${sensores[s]._id} = [
                
                                ];
                                let options${sensores[s]._id} = {
                                    series: [{
                                        name: "${sensores[s].name}",
                                        data: data${sensores[s]._id}.slice()
                                    }],
                                    chart: {
                                        id: 'realtime${sensores[s]._id}',
                                        height: 250,
                                        type: 'area',
                                        animations: {
                                            enabled: true,
                                            easing: 'linear',
                                            dynamicAnimation: {
                                                speed: 1000
                                            }
                                        },
                                        toolbar: {
                                            show: false
                                        },
                                        zoom: {
                                            enabled: false
                                        }
                                    },
                                    dataLabels: {
                                        enabled: false
                                    },
                                    stroke: {
                                        curve: 'smooth'
                                    },
                                    title: {
                                        text: 'SENSOR DE ${sensores[s].name} [ ${sensores[s].measurement} ]',
                                        align: 'left'
                                    },
                                    markers: {
                                        size: 0
                                    },
                                    xaxis: {
                                        type: 'datetime',
                                    },
       
                                    legend: {
                                        show: false
                                    },
                                    colors: ['${sensores[s].color}'],
                                    noData: {
                                        text: 'Cargando datos...'
                                    }
                                };

                                var chart${sensores[s]._id} = new ApexCharts(document.querySelector("#realtime${sensores[s]._id}"), options${sensores[s]._id});
                                chart${sensores[s]._id}.render();

                                var optionsgauge${sensores[s]._id} = {
                                    series: [0],
                                    chart: {
                                        height: 300,
                                        type: 'radialBar',
                                        toolbar: {
                                            show: false
                                        }
                                    },
                                    plotOptions: {
                                        radialBar: {
                                            startAngle: -90,
                                            endAngle: 90,
                                            track: {
                                                background: '#fff',
                                                strokeWidth: '97%',
                                                margin: 10, // margin is in pixels
                                                dropShadow: {
                                                    enabled: true,
                                                    top: 2,
                                                    left: 0,
                                                    color: '${sensores[s].color}',
                                                    opacity: 1,
                                                    blur: 2
                                            }
                                        },
                                        dataLabels: {
                                            show: true,
                                            name: {
                                                offsetY: -10,
                                                show: true,
                                                color: '#FFF',
                                                fontSize: '12px'
                                            },
                                            value: {
                                                formatter: function(val) {
                                                    return parseInt(val);
                                                },
                                                color: '#111',
                                                fontSize: '20px',
                                                show: true,
                                            }
                                        }
                                    }
                                    },
        fill: {
          type: 'gradient',
          gradient: {
                            shade: 'light',
                            shadeIntensity: 0.4,
                            inverseColors: false,
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [0, 50, 53, 91]
                        },
        },
        stroke: {
         // lineCap: 'round'
        },
        colors: ['${sensores[s].color}'],
        labels: ['${sensores[s].name}'],
        };

        var chartgauge${sensores[s]._id} = new ApexCharts(document.querySelector("#gauge${sensores[s]._id}"), optionsgauge${sensores[s]._id});
        chartgauge${sensores[s]._id}.render();

                            
                            
                            
                            `

                            if(sensores[s].controlable) {
                                variableDigital += `
                                    <tr>
                                        <th>${sensores[s].name}</th>
                                        <td>[ DESCRIPCION_SENSOR ]</td>
                                        <td><span class='badge rounded-pill bg-warning text-dark'>27.6</span></td>
                                        <td>
                                            <button class="btn btn-warning" onclick="send_command('factorb-iot-0015', 'rel1')">set-point</button>
                                        </td>
                                    </tr>    
                                `;
                            }

                        } 
                        else if(sensores[s].type == "DI") {
                            variableDigital += `
                                <tr>
                                      <th>${sensores[s].name}</th>
                                      <td>${sensores[s].descripcion}</td>
                                       <td id="DI${sensores[s]._id}">
                                        <span class='badge rounded-pill bg-light'>no data</span>
                                       </td>
                                      <td></td>
                                </tr>      
                            `;

                            socket += `
                                
                                if(sensores.${sensores[s].variable} == 1) {
                                    document.getElementById('DI${sensores[s]._id}').innerHTML = "<span class='badge rounded-pill bg-success'>activado</span>";
                                } else if(sensores.${sensores[s].variable} == 0) {
                                    document.getElementById('DI${sensores[s]._id}').innerHTML = "<span class='badge rounded-pill bg-danger'>desactivado</span>";
                                }`;


                        } else {

                            console.log("sensor no reconocido");
                        }

                    }

                    functionRealTime += `
                        var optionsbattery = {
                            series: [0],
                            chart: {
                                height: 350,
                                type: 'radialBar',
                                offsetY: -10
                            },
                            plotOptions: {
                                radialBar: {
                                    startAngle: -135,
                                    endAngle: 135,
                                    dataLabels: {
                                        name: {
                                            fontSize: '16px',
                                            color: undefined,
                                            offsetY: 120
                                        },
                                        value: {
                                            offsetY: 76,
                                            fontSize: '22px',
                                            color: undefined,
                                            formatter: function (val) {
                                                return val + "%";
                                            }
                                        }
                                    }
                                }
                            },
                            fill: {
                                type: 'gradient',
                                gradient: {
                                    shade: 'dark',
                                    shadeIntensity: 0.15,
                                    inverseColors: false,
                                    opacityFrom: 1,
                                    opacityTo: 1,
                                    stops: [0, 50, 65, 91]
                                },
                            },
                            stroke: {
                                dashArray: 4
                            },
                            labels: ['Nivel Batería'],
                            colors: ['#09A001']
                        };

                        var chartbattery = new ApexCharts(document.querySelector("#battery_gauge"), optionsbattery);
                        chartbattery.render();


                        var optionswifi = {
                            series: [0],
                            chart: {
                                height: 350,
                                type: 'radialBar',
                                offsetY: -10
                            },
                            plotOptions: {
                                radialBar: {
                                    startAngle: -135,
                                    endAngle: 135,
                                    dataLabels: {
                                        name: {
                                            fontSize: '16px',
                                            color: undefined,
                                            offsetY: 120
                                        },
                                        value: {
                                            offsetY: 76,
                                            fontSize: '22px',
                                            color: undefined,
                                            formatter: function (val) {
                                                return val + "%";
                                            }
                                        }
                                    }
                                }
                            },
                            fill: {
                            type: 'gradient',
                            gradient: {
                                shade: 'dark',
                                shadeIntensity: 0.15,
                                inverseColors: false,
                                opacityFrom: 1,
                                opacityTo: 1,
                                stops: [0, 50, 65, 91]
                            },
                        },
                        stroke: {
                            dashArray: 4
                        },
                        labels: ['Señal Wi-fi'],
                        colors: ['#dbee1b']
                    };

                    var chartwifi = new ApexCharts(document.querySelector("#wifi_gauge"), optionswifi);
                    chartwifi.render();
                        
                        `;
                        socket += `


                            chartwifi.updateSeries([parseInt(100 * sensores.signal_level)])
                            chartbattery.updateSeries([parseInt(100 * sensores.battery_level)])
                        `;


                }
            }

            variableDigital += ` 
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            
            
            `;
            document.getElementById('tarjeta_sensores').innerHTML = variableAnaloga + bateria + variableDigital + wifi;
            socket += `
            
            
            
            
            console.log(sensores);});`;
            let ai = new Function(functionRealTime+socket);
            let batterywifi = new Function(`
            
                

         
            
            `);
            //batterywifi();
            ai();






            for(let device = 0 ; device < resultados.data[0].dispositivos.length ; device++){
                
                if(resultados.data[0].dispositivos[device].id_device == "{{id_device}}") {
                    
                    console.log(resultados.data[0]._id);
                    notification("success", `${res.data.data[0].dispositivos[device].sensores.length} sensores recuperados`);
                    let rele_socket;
                    let sensors_cards = "";
                    let reles_cards = `
                      <div class="col-12 shadow rounded" style="background-color: #fff;">
                          <table class="table table-hover p-5 text-center">
                              <thead>
                                  <tr>
                                      <th scope="col">Nombre</th>
                                      <th scope="col">Descripción</th>
                                      <th scope="col">Estado</th>
                                      <th scope="col">Controles</th>
                                  </tr>
                              </thead>
                              <tbody>
                    `;
                    
                    for(let s = 0 ; s < resultados.data[0].dispositivos[device].sensores.length ; s++){
                        
                        if(resultados.data[0].dispositivos[device].sensores[s].type == "AI"){
                            
                            sensors_cards += `
                                <div class="col-8 shadow rounded mb-3" style="background-color: #fff;">
                                  <div id="chart_${s}" class="my-3"></div>
                                </div>
                                
                            `;

                            chart_apex = new Function(`

                              

                                let data = [];
                    
                                let options = {
                                    chart: {
                                        height: 350,
                                        type: 'area',
                                        animations: {
                                            enabled: true,
                                            easing: 'linear',
                                            dynamicAnimation: {
                                                speed: 500
                                            }
                                        },
                                        toolbar: {
                                            show: false
                                        },
                                        zoom: {
                                            enabled: false
                                        }
                                    },
                                    tooltip: {
                                        
                                    },
                                    dataLabels: {
                                        enabled: true
                                    },
                                    stroke: {
                                        curve: 'straight'
                                    },
                                    series: [{
                                        data: data
                                    }],
                                    title: {
                                        text: 'sensor de ${resultados.data[0].dispositivos[device].sensores[s].variable}',
                                        align: 'left'
                                    },
                                    markers: {
                                        size: 0
                                    },
                                    xaxis: {
                                        labels: {
                                            format: 'HH:mm:ss'
                                        }
                                        
                                    },
                                    yaxis: {
                                        max: 100,
                                        min: 0
                                    },
                                    legend: {
                                        show: true
                                    },
                                    colors: ['#FF4D0E'],
                                };

                                let chart = new ApexCharts(
                                    document.querySelector("#chart_${s}"),
                                    options
                                );

                                chart.render();

                                Date.prototype.addHours= function(h){
                                  this.setHours(this.getHours()+h);
                                  return this;
                                }

                                socket.on("${res.data.data[0].dispositivos[device].sensores[s].name}", sensores => {
                                    
                                    
                                    
                                    data.push({x: sensores.created_at_origin, y: sensores.${res.data.data[0].dispositivos[device].sensores[s].id_variable}});
                                  
                                    chart.updateSeries([{
                                            data: data
                                    }])
                                });      
                            `);
                        }
                        else if(res.data.data[0].dispositivos[device].sensores[s].type == "DO"){
                            reles_cards += `
                                <tr>
                                    <th scope="row">${res.data.data[0].dispositivos[device].sensores[s].name}</th>
                                    <td>${res.data.data[0].dispositivos[device].sensores[s].descripcion}</td>
                                    <td id="${res.data.data[0].dispositivos[device].sensores[s].variable}"> -- </td>
                                    <td>
                                        <button class="btn btn-success" onclick="send_command('${res.data.data[0].dispositivos[device].name}', '{"type":"onoff","value":true}')">ON</button>
                                        <button class="btn btn-danger" onclick="send_command('${res.data.data[0].dispositivos[device].name}', '{"type":"onoff","value":false}')">OFF</button>
                                    </td>
                                </tr>
                            `;
                          
                            rele_socket = new Function(`
                                socket.on("${res.data.data[0].dispositivos[device].name}", sensores => {
                                    
                                    if(sensores.${res.data.data[0].dispositivos[device].sensores[s].variable} == 0) {
                                        document.getElementById('${res.data.data[0].dispositivos[device].sensores[s].variable}').innerHTML = "<span class='badge rounded-pill bg-danger'>Desactivado</span>";
                                    }
                                    else if(sensores.${res.data.data[0].dispositivos[device].sensores[s].variable} == 1){
                                        document.getElementById('${res.data.data[0].dispositivos[device].sensores[s].variable}').innerHTML = "<span class='badge rounded-pill bg-success'>Activado</span>";
                                    }
                                });      
                            `);

                            
                        }
                        else if(res.data.data[0].dispositivos[device].sensores[s].type == "DI"){
                            sensors_cards += `<div class="col-12"> ENTRADA DIGITAL </div>`;
                        }




                        
                    }

                   
                    reles_cards += `
                                    <tr>
                                        <th scope="row">Señal Wi-fi</th>
                                        <td> -- </td>
                                        <td id="k">
                                            <span class='badge rounded-pill text-dark bg-warning'>Regular</span>
                                        </td>
                                        <td> -78 dbm  [VALOR ESTATICO]</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Estado Bateria</th>
                                        <td> -- </td>
                                        <td id="k">
                                            <span class='badge rounded-pill bg-danger'>Descargandose</span>
                                        </td>
                                        <td> 73%  [VALOR ESTATICO]</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    `;
                    //document.getElementById('sensors_cards').innerHTML = sensors_cards+reles_cards;
                    //chart_apex();
                    //rele_socket();
                     
                }
            }
        }
        else {
            /*document.getElementById('tarjeta_sensores_principal').innerHTML = `
                <div class="col-6 of">
                    <div class="p-3 border" style="background-color: #E2E2E2;">
                        <p class="fs-3">${resultados.msg}</p>
                    </div>
                </div>
            `;*/
        }      
    }).catch((err) => {   
        console.log(err);
    });


    function send_command(device, command){
        console.log(device, command);
       

        axios(
            { 
                method: 'POST', 
                url: '{{url}}/api/send_command', 
                headers: {
                    Authorization: "Bearer Token"
                }, 
                data: { 
                    commandMessage: command,
                    deviceId: device 
                }
            }
        ).then((res) => {
        
            console.log(res.data);

        }).catch((err) => {
            
            console.log(err);

        });

    }
  
    $(document).ready(function() {
        $('#data_device').DataTable({
            "language": espanol,
            "pageLength": 3
        });
    } );     
</script>