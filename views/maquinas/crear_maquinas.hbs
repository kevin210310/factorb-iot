<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <style type="text/css">
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map2 {
        height: 300px;
      }

      /* Optional: Makes the sample page fill the window. */
      html,
      body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
    <script>
      function initMap() {
        const myLatLng = { lat: -25.363, lng: 131.044 };
        const map = new google.maps.Map(document.getElementById("map2"), {
          zoom: 4,
          center: myLatLng,
        });
        new google.maps.Marker({
          position: myLatLng,
          map,
          title: "Hello World!",
        });
      }
    </script>


<div class="container-fluid m-0 p-0 h-auto" style="overflow-x: hidden;">

    <!-- BREADCRUMB -->
    <div class="row mt-3 mx-0 mx-md-3 bg-body shadow-sm">
        <div class="col-12 rounded py-auto">
            <nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
                <ol class="breadcrumb my-3">
                    <li class="breadcrumb-item"><a href="/dashboard">INICIO</a></li>
                    <li class="breadcrumb-item"><a href="/dashboard/maquinas">MAQUINAS</a></li>
                    <li class="breadcrumb-item active" aria-current="page">AGREGAR NUEVA MAQUINA</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row mt-3 mx-0 mx-md-3 px-5 d-flex justify-content-center">
        <div class="col-6">
            <div class="card">
                <div class="card-body">
                    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active btn-lg" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">1. Datos generales</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link btn-lg" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">2. Localización</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link btn-lg" id="pills-contact-tab" data-bs-toggle="pill" data-bs-target="#pills-contact" type="button" role="tab" aria-controls="pills-contact" aria-selected="false">3. paso</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="pills-tabContent">
                        <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                            <div class="container border bg-light">
                                <div class="row py-5">
                                    <!--<div class="col-12 mb-3">
                                        <img id="blah" src="\images\machines\machine-image.svg" class="img-thumbnail rounded mx-auto d-block" alt="Tu imagen" width="200px" height="200px">
                                       
                                    </div>
                                    <div class="col-12">
                                        <div class="mb-3">
                                        
                                            <input class="form-control" type="file" id="formFile1">
                                        </div>
                                    </div> -->
                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <input type="text" class="form-control" id="nameMachine" placeholder="name@example.com" onchange="nameMachine()">
                                            <label for="floatingInput">Nombre de la maquina</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <textarea class="form-control" placeholder="Leave a comment here" id="descriptionMachine" style="height: 100px" onchange="descriptionMachine()"></textarea>
                                            <label for="floatingTextarea">Descripción</label>
                                            <small class="text-muted" id="msj-dm"> maximo 50 caracteres</small>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <select class="form-select" id="selectUser" style="height: 70px" aria-label="Floating label select example" onchange="selectUsers()">
                                                
                                    
                                            </select>
                                            <label for="selectUser">Asociar usuarios</label>
                                        </div>
                                    </div>
                                    <div class="col-12" id="usuariosAsociados"></div>

                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <select class="form-select" id="region" aria-label="Floating label select example" style="height: 70px" onchange="region()">        
                                            </select>
                                            <label for="floatingSelect">region</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <select class="form-select" id="comuna" style="height: 70px" aria-label="Floating label select example">
                                            </select>
                                            <label for="floatingSelect">comuna</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="d-grid" id="buttonNewMachine">
                                            <button class="btn btn-primary" type="button" onclick="newMachine()">Crear maquina</button>
                                        </div>
                                    </div>
                                    
                                </div>
                            </div>
                            


                        </div>
                        <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                            <div class="container border bg-light">
                                <div class="row py-5">
                                    <div class="col-12">
                                        <div id="map2"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">...</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
 <!--  SINGLE FILE -->
<form action="/uploadfile" enctype="multipart/form-data" method="POST"> 
   <input type="file" name="myFile" />
   <input type="submit" value="Upload a file"/>
</form>
<button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 5">
  <div id="liveToast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <img src="..." class="rounded me-2" alt="...">
      <strong class="me-auto">Bootstrap</strong>
      <small>11 mins ago</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Hello, world! This is a toast message.
    </div>
  </div>
</div>
<script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDi_GipB4VPaAcH_U0YSvypCM5VqQv69x4&callback=initMap&libraries=&v=weekly"
      async
    ></script>



<script>
    function readImage (input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result); // Renderizamos la imagen
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#formFile1").change(function () {
        // Código a ejecutar cuando se detecta un cambio de archivO
        readImage(this);
    });
    
    
    let objeto = [];
    let selectUser = document.getElementById('selectUser');

    let findUsers = [];
    let dataUsers = `<option value='{"id": "", "nombre": ""}' selected>Seleccionar usuario</option>`;

    axios({
        method: 'POST',
        url: '{{url}}/api/showUsers',
        headers: {
            Authorization: 'Bearer token'
        },
        data: {}
    }).then((res) => {
        console.log(res.data);

        for(let i = 0 ; i < res.data.data.length ; i++) {
            findUsers.push({id: res.data.data[i]._id, nombre: res.data.data[i].nombre + " " + res.data.data[i].apellidos, rol: res.data.data[i].rol});
            dataUsers += `
                <option value='{"id":"${res.data.data[i]._id}", "nombre": "${res.data.data[i].nombre + " " + res.data.data[i].apellidos}"}'>${res.data.data[i].nombre + " " + res.data.data[i].apellidos} - ${res.data.data[i].rol}</option>
            `;
        }

        selectUser.innerHTML = dataUsers;


    }).catch((err) =>{
        console.log(err);
    });
  
    function selectUsers() {
        let users = `<div class="row mb-3">`;
        let select = document.getElementById('selectUser');
        let list = document.getElementById('usuariosAsociados');

        let parseardata = JSON.parse(select.value);

        console.log(findUsers);
        if(parseardata.id != "") {
            objeto.push(parseardata);

            for(let z = 0 ; z < findUsers.length ; z ++) {
                if(findUsers[z].id == parseardata.id) {
                    console.log("comparacion", z,findUsers[z].id, parseardata.id);
                    findUsers.splice(z, 1);
                }
            }
            console.log("dentro for", findUsers);
        }

        console.log(findUsers);

        for(let k = 0 ; k < objeto.length ; k ++) {
            users += `
                <div class="col-4 fs-4"><span class="badge rounded-pill bg-info text-dark mx-auto">${objeto[k].nombre}</span></div>
            `;
        }
        let arreglo = `<option value='{"id": "", "nombre": ""}' selected>Seleccionar usuario</option>`;

        for(let z = 0 ; z < findUsers.length ; z ++) {
            arreglo += `<option value='{"id":"${findUsers[z].id}", "nombre": "${findUsers[z].nombre}"}'>${findUsers[z].nombre} - ${findUsers[z].rol}</option>`;
        }
        selectUser.innerHTML = arreglo;
        list.innerHTML = users + `</div>`;
      

  } 

  function nameMachine() {
      let name = document.getElementById('nameMachine');

      if(name.value.length > 7) {
            $("#nameMachine").addClass("is-valid");
            $("#nameMachine").removeClass("is-invalid");
            return true;
      } else {
            $("#nameMachine").addClass("is-invalid");
            $("#nameMachine").removeClass("is-valid");
            return false;
      }
  }
  function descriptionMachine() {
      let name = document.getElementById('descriptionMachine');
      if(name.value.length == 0){
          return true;

      } else if(name.value.length < 50) {
          $("#descriptionMachine").addClass("is-valid");
          $("#descriptionMachine").removeClass("is-invalid"); 
          return true;
      } else {
          $("#descriptionMachine").addClass("is-invalid");
          $("#descriptionMachine").removeClass("is-valid");
          return false;
      }

  }
  let administracion;
  axios({
      method: 'POST',
      url: '{{url}}/api/administracion'
  }).then((res) => {
    
      console.log(res.data);
      let regiones = document.getElementById('region');
      let region = `<option value="0" selected>Seleccionar region</option>`;
      administracion = res.data.regions;
      for(let i = 0; i < res.data.regions.length; i++) {
          region += `
            <option value=${res.data.regions[i].number}>${res.data.regions[i].name}</option>
          `;
      }

      regiones.innerHTML = region;
   

  }).catch((err) => {

      console.log(err);
  });

  function region(){
      let region = document.getElementById('region');
      let comuna = document.getElementById('comuna');
      console.log(region);
      let comunas = `<option value="0" selected>Seleccionar Comuna</option>`;
      if(region.value == 0){

      } else {
          for(let i = 0 ; i < administracion.length ; i ++){
              if(region.value == administracion[i].number) {
                  console.log(administracion[i].communes);
                  for(j = 0 ; j < administracion[i].communes.length ; j++) {
                      comunas += `<option value="${administracion[i].communes[j].name}">${administracion[i].communes[j].name}</option>`;
                  }
                  
              }
          }
          comuna.innerHTML = comunas;
      }
  }

  function newMachine(){
      let button  = document.getElementById('buttonNewMachine');
      let region = document.getElementById('region');
      let comuna = document.getElementById('comuna');
      let name = document.getElementById('nameMachine');
      let description = document.getElementById('descriptionMachine');
      let send = true;
      
      button.innerHTML = `
          <button class="btn btn-primary btn-lg" type="button" disabled>
              <span class="spinner-border spinner-border-md" role="status" aria-hidden="true"></span>
              Creando nueva maquina
          </button>`;

      if(region.value != 0){
          $("#region").addClass("is-valid");
          $("#region").removeClass("is-invalid"); 
      }
      else {
          $("#region").addClass("is-invalid");
          $("#region").removeClass("is-valid");
          send = false;

      }

      if(comuna.value != 0){
          $("#comuna").addClass("is-valid");
          $("#comuna").removeClass("is-invalid"); 
      }
      else {
          $("#comuna").addClass("is-invalid");
          $("#comuna").removeClass("is-valid");
          send = false;

      }

      if(!nameMachine()) {
          send = false;
      }
      if(!descriptionMachine()) {
          send = false;
      }
      console.log(objeto);

      let f = [];

      for(l=0;l<objeto.length;l++) {
          f.push(objeto[l].id);
      }

      console.log(f);


      if(send) {
          axios({
              method: 'POST',
              url: '{{url}}/api/createMachine',
              headers: {
                  Authorization: "Bearer Token"
              },
              data: { 
                  nameMachine: name.value,
                  descriptionMachine: description.value,
                  location: comuna.value,
                  usuarios_permitidos: f
              }
          }).then((res) => {
    
              console.log(res.data);
              if(res.data.create) {
                  button.innerHTML = `<button class="btn btn-primary" type="button" onclick="newMachine()">Crear maquina</button>`;
              }

          }).catch((err) => {

              console.log(err);
          });
      } else {
          button.innerHTML = `<button class="btn btn-primary" type="button" onclick="newMachine()">Crear maquina</button>`;
      }
  }
</script>