
<script>
    let id = {{id}};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script src="/javascripts/gps.js"></script>



<div class="nav-superior shadow rounded my-auto">
    <ol class="nav-superior__breadcrumb m-0 breadcrumb">        
        <li class="breadcrumb-item"><a href="/dashboard">TABLERO</a></li>
        <li class="breadcrumb-item active" aria-current="page">Localizaci√≥n Dispositivos</li>
    </ol>
    <div class="buttons" id="devices">
        <b class="font-weight-light">Dispositivos: 2 encontrados. {{id}}</b>
    </div>
</div>
<div class="contenido-principal">
    <div id="map"></div>
</div>




    
    <style type="text/css">
      #map {
        min-height: 100%;
      }
    </style>
    <script>
      // The following example creates complex markers to indicate beaches near
      // Sydney, NSW, Australia. Note that the anchor is set to (0,32) to correspond
      // to the base of the flagpole.
      function initMap() {
        const map = new google.maps.Map(document.getElementById("map"), {
          
          center: { lat: -34.404499, lng: -70.871098 },
          zoom: 10,
          mapTypeId: "satellite",
          heading: 90,
          tilt: 45,
        });


        setMarkers(map);
      }

      function rotate90() {
        const heading = map.getHeading() || 0;
        map.setHeading(heading + 90);
      }

      function autoRotate() {
        // Determine if we're showing aerial imagery.
        if (map.getTilt() !== 0) {
          window.setInterval(rotate90, 3000);
        }
      }
      // Data for the markers consisting of a name, a LatLng and a zIndex for the
      // order in which these markers should display on top of each other.
      const beaches = [
        ["Bondi Beach", -34.404499, -70.871098, 4],
        ["Coogee Beach", -34.404499, -70.871298, 5],
      ];

      function setMarkers(map) {
        // Adds markers to the map.
        // Marker sizes are expressed as a Size of X,Y where the origin of the image
        // (0,0) is located in the top left of the image.
        // Origins, anchor positions and coordinates of the marker increase in the X
        // direction to the right and in the Y direction down.
        const image = {
          url:
            "/images/placeholder.png",
          // This marker is 20 pixels wide by 32 pixels high.
          size: new google.maps.Size(32, 32),
          // The origin for this image is (0, 0).
          origin: new google.maps.Point(0, 0),
          // The anchor for this image is the base of the flagpole at (0, 32).
          anchor: new google.maps.Point(0, 32),
        };
        // Shapes define the clickable region of the icon. The type defines an HTML
        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
        // The final coordinate closes the poly by connecting to the first coordinate.
        const shape = {
          coords: [1, 1, 1, 20, 18, 20, 18, 1],
          type: "poly",
        };

        for (let i = 0; i < beaches.length; i++) {
          const beach = beaches[i];
          new google.maps.Marker({
            position: { lat: beach[1], lng: beach[2] },
            map,
            icon: image,
            shape: shape,
            title: beach[0],
            zIndex: beach[3],
          });
        }
      }
    </script>
  
    

    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDi_GipB4VPaAcH_U0YSvypCM5VqQv69x4&callback=initMap&libraries=&v=weekly"
      async
    ></script>