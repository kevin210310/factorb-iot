<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<style type="text/css">
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        min-height: 300px;
        width: 100%;
      }

    </style>
    <script>
      // This example creates a 2-pixel-wide red polyline showing the path of
      // the first trans-Pacific flight between Oakland, CA, and Brisbane,
      // Australia which was made by Charles Kingsford Smith.
      
    </script>
<div class="container-fluid m-0 p-0 h-auto" style="overflow-x: hidden;">
    
    <!-- BREADCRUMB -->
    <div class="row mt-3 mx-0 mx-md-3">
        <div class="col-12 rounded py-auto shadow-sm bg-body">
            <nav aria-label="breadcrumb d-inline">
                <ol class="breadcrumb my-3">
                    <li class="breadcrumb-item"><a href="/dashboard/d">MAQUINAS</a></li>
                    <li class="breadcrumb-item active" aria-current="page">SEGUIMIENTO</li>
                    <li class="breadcrumb-item active" aria-current="page">ID: {{id_machine}}</li>
                </ol>
            </nav>
        </div>
    </div>
    
    <div class="row px-3 my-3 g-3">

        <!-- DATOS PERSONALES DISPOSITIVO -->
        <div class="col-12 col-sm-4" >
            <div class="card" style="height: 300px;">
                <h5 class="card-header">Dispositivo GPS</h5>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <h4 class="card-title" >Maquina asociada :</h4>
                            <h4 class="card-title" >Nombre Dispositivo :</h4>
                            
                        </div>
                        <div class="col-6">
                            <h4 class="card-title" id="nombre_machine" ></h4>
                            <h4 class="card-title" id="nombre_device" ></h4>
                            
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <h4 class="card-title" >Descripción:</h4>
                            <h4 class="card-title" >Ultima Actualización :</h4>
                        </div>
                        <div class="col-6">
                            <h5 class="card-text" id="descripcion" ></h5>
                            <h5 class="card-text"><small class="text-muted">2021-04-08 17:05:23</small></h5>
                        </div>
                    </div>
                    <div class="d-grid gap-2 mt-2">
                        <button class="btn btn-primary" type="button">Ver datos dinamicos</button>
                        <button class="btn btn-primary" type="button">Ver historicos</button>
                    </div> 
                </div>
            </div>
        </div>

        <!-- MAPA GOOGLE -->
        <div class="col-12 col-sm-8" style="height: 300px;">
            <div class="card p-0">
                <div class="card-body p-0">
                    <div id="map"></div>
                </div>
            </div>            
        </div>

        <!-- MAPA LEAFLET -->
        <div class="col-12 col-sm-8" style="height: 300px;">
            <div class="card p-0">
                <div class="card-body p-0">
                    <div id="map-leaflet"></div>
                </div>
            </div>            
        </div>
        <div class="col-12 col-sm-6" >
            <div class="card" style="min-height: 300px;">
                <h5 class="card-header">Grafico bateria y señal wi-fi <small class="text-muted float-end">ultimos 10 minutos</small></h5>
                <div class="card-body">
                    <div id="chart"></div>
                </div>
            </div>
        </div>
    <div class="col-12 col-sm-6" >
        <div class="card" style="min-height: 300px;">
            <h5 class="card-header">Grafico Velocidad <small class="text-muted float-end">ultimos 10 minutos</small></h5>
            <div class="card-body">
                <div id="chart-temp"></div>
            </div>
        </div>
    </div>
    <div class="col-6 col-sm-3">
        <div class="card" style="min-height: 300px;">
            <h5 class="card-header">Bateria</h5>
            <div class="card-body">
                <div id="chart-temp"></div>
            </div>
        </div>
    </div>
    </div>
</div>
<script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDi_GipB4VPaAcH_U0YSvypCM5VqQv69x4&callback=initMap&libraries=&v=weekly"
      async
    ></script>


<script>
    let map;

    //inicializacion mapa
    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { 
                lat: 40.76, 
                lng: -73.983 
            },
            zoom: 18,
            mapTypeId: "satellite",
            mapTypeControl: true,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                position: google.maps.ControlPosition.TOP_CENTER,
            },
            zoomControl: true,
            zoomControlOptions: {
                position: google.maps.ControlPosition.LEFT_CENTER,
            },
            scaleControl: true,
            streetViewControl: true,
            streetViewControlOptions: {
                position: google.maps.ControlPosition.LEFT_TOP,
            },
            fullscreenControl: true,
        });
        map.setTilt(45);

    }

    //peticion de maquinas con gps
    axios({ 
        
        method: 'POST',   
        url: '{{url}}/api/find_machinestracker', 
        headers: {
            Authorization: "Bearer Token"
        }, 
        data: { 
            id: "{{id_user}}",
            id_machine: "{{id_machine}}"
        }
    
    }).then((res) => {
        

        document.getElementById('nombre_machine').innerHTML = res.data.data2[0].nombre;
        document.getElementById('nombre_device').innerHTML = res.data.data[0].name;
        document.getElementById('descripcion').innerHTML = res.data.data2[0].descripcion;
        
        axios({

            method: 'POST',   
            url: '{{url}}/api/find_datadevicetracker', 
            headers: {
                Authorization: "Bearer Token"
            }, 
            data: { 
                name: res.data.data[0].name
            }
            }).then((res) =>{
               
                let inicio = [];
                let fin = [];
                let trazabilidad = [];
                let trazabilidad2 = [];
                let wifi = [];
                let battery = [];
                let fechas = [];
                let tracker = res.data.data[0].data;
                let speed = [];
                

                for(let t = 0 ; t < tracker.length ; t ++) {
                    console.log(tracker[t].time)
                    if(tracker[t].lat != 0 || tracker[t].lng != 0){
                      trazabilidad2.push({lat: tracker[t].lat, lng: tracker[t].lng, time: new Date(tracker[t].time) });
                      if(t == 0){
                        trazabilidad.push({lat: tracker[t].lat, lng: tracker[t].lng});
                        inicio.push({lat: tracker[t].lat, lng: tracker[t].lng});
                      }
                      else {
                        let data;
                        var R = 6372.795477598;
                      
                        var latA = trazabilidad[trazabilidad.length-1].lat;
                        var lngA = trazabilidad[trazabilidad.length-1].lng;
                        
                        var latB = tracker[t].lat;
                        var lngB = tracker[t].lng;
                        data = R * Math.acos( ( Math.sin(latA) * Math.sin(latB) ) + ( Math.cos(latA) * Math.cos(latB) * Math.cos(lngA-lngB) ) );
                        data = (data * Math.PI)/180;

                        trazabilidad.push({lat: tracker[t].lat, lng: tracker[t].lng});

                        /*if(data > 1){
                          trazabilidad.push({lat: tracker[t].lat, lng: tracker[t].lng});
                        }

                        if(t == tracker.length-1){
                          trazabilidad.push({lat: tracker[t].lat, lng: tracker[t].lng});
                          fin.push({lat: tracker[t].lat, lng: tracker[t].lng});
                        
                        }   */

                                             
                      }


                    
                    
                      if(t >= tracker.length - 60){
                          wifi.push(tracker[t].wifi);
                          battery.push(tracker[t].bat);
                          fechas.push(tracker[t].time);

                          speed.push({x: tracker[t].time, y: tracker[t].speed});

                      }
                    }
                    
                }

                map.setCenter({lng: tracker[0].lng, lat: tracker[0].lat}, 2);
                let ordenado = trazabilidad2.sort((a, b) => a.time - b.time)
                console.log(ordenado)
                let a = []

                for(let t = 0 ; t < ordenado.length ; t ++) {
                  a.push({lat: ordenado[t].lat, lng: ordenado[t].lng})

                  if(ordenado[t] == 0){

                    let inicioTraza = { lat: ordenado[0].lat, lng: ordenado[0].lng };
              
                    let infowindow = new google.maps.InfoWindow();
                    infowindow.setContent("Inicio");
                    let marker = new google.maps.Marker({ map, position: inicioTraza });
                    marker.addListener("click", () => {
                        infowindow.open(map, marker);
                    });

                  }
                  else if(ordenado[t] == ordenado.length-1){
                    let finTraza = { lat: ordenado[ordenado.length-1].lat, lng: ordenado[ordenado.length-1].lng };
        
                    let infowindow = new google.maps.InfoWindow();
                    infowindow.setContent("Fin");
                    let marker = new google.maps.Marker({ map, position: finTraza });
                    marker.addListener("click", () => {
                        infowindow.open(map, marker);
                    });
                    marker.setMap(map);
                  }
                }

                const flightPath = new google.maps.Polyline({
                    path: a,
                    geodesic: true,
                    strokeColor: "#FF0000",
                    strokeOpacity: 1.0,
                    strokeWeight: 2,
                });
                flightPath.setMap(map);



                // grafico bateria y wifi
                var options = {
                    series: [{
                        name: 'Señal Wi-Fi [dbm]',
                        data: wifi
                    }, {
                        name: 'Señal Bateria [V]',
                        data: battery
                    }],
                    chart: {
                        height: 350,
                        type: 'area'
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                      curve: 'smooth'
                    },
                    xaxis: {
                      type: 'datetime',
                      categories: fechas
                    },
                    tooltip: {
                      x: {
                        format: 'dd/MM/yy HH:mm:ss'
                      },
                    },
                };

                var chart = new ApexCharts(document.querySelector("#chart"), options);
                chart.render();

                var optionsTemp = {
                    series: [{
                        name: "Velocidad [km/h]",
                        data: speed           
                    }],
                    chart: {
                        type: 'area',
                        height: 350,
                        zoom: {
                          enabled: false
                        }
                    },
                    dataLabels: {
                      enabled: false
                    },
                    stroke: {
                      curve: 'smooth'
                    },
                    xaxis: {
                      type: 'datetime',
                    },
                    yaxis: {
                      opposite: true
                    },
                    legend: {
                      horizontalAlign: 'bottom'
                    }
                };

                var chartTemp = new ApexCharts(document.querySelector("#chart-temp"), optionsTemp);
                chartTemp.render();

                
            }).catch((err) =>{
                console.log(err);
            });
    }).catch((err) => {
    
        console.log(err);
    });
    
</script>
